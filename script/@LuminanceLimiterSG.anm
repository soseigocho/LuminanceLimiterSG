@輝度リミッターSGオプション
--track0:上限, 0.0, 4096.0, 4096.0, 0.01
--track1:上限閾値, 0.0, 4096.0, 0.0, 0.01
--track4:下限閾値, 0.0, 4096.0, 4096.0, 0.01
--track3:下限, 0.0, 4096.0, 0.0, 0.01

local Global = getenv(0)
if(Global.LuminanceLimiterState == nil) then
    Global.LuminanceLimiterState = {}
end

local llst = Global.LuminanceLimiterState

_0 = _0 or {}
llst.top_limit_opt = _0[1] or obj.track0
llst.top_threashold_opt = _0[2] or obj.track1
llst.bottom_limit_opt = _0[3] or obj.track2
llst.bottom_threashold_opt = _0[4] or obj.track3
_0 = nil


@輝度リミッターSG
--track0: ゲイン, -4096.0, 4096.0, 0.0, 0.01
--track1: 補間モード, 0, 0, 0, 0

_0 = _0 or {}
local gain = _0[1] or obj.track0
_0 = nil

local Global = getenv(0)
if(Global.LuminanceLimiterState == nil) then
    Global.LuminanceLimiterState = {}
end
local llst = Global.LuminanceLimiterState

local ll = require("luminance_limiter_sg")

local top_limit = (llst.top_limit_opt or ll.lmax) / ll.lmax
local top_threashold = (llst.top_threashold_opt or ll.lmin) / ll.lmax
local bottom_limit = (llst.bottom_limit_opt or ll.lmin) / ll.lmax
local bottom_threashold = (llst.bottom_threashold_opt or ll.lmax) / ll.lmax

local data, w, h = obj.getpixeldata()

local character = ll.Character.new(
    interpolation_mode,
    top_limit, top_threashold,
    bottom_limit, bottom_threashold,
    top_peak, bottom_peak)

    local limiter = Limiter.new()

local limited = limiter:limit(gain, character, data, w, h)

obj.setpixeldata(limited)
